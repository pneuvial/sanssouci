% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rowWilcoxonTests.R
\name{rowWilcoxonTests}
\alias{rowWilcoxonTests}
\title{Wilcoxon rank sum tests for each row of a matrix}
\usage{
rowWilcoxonTests(
  mat,
  categ,
  alternative = c("two.sided", "less", "greater"),
  correct = TRUE
)
}
\arguments{
\item{mat}{A numeric matrix whose rows correspond to variables and columns to
observations}

\item{categ}{A numeric vector of \code{ncol(mat)} categories in \eqn{0, 1} for the
observations}

\item{alternative}{A character string specifying the alternative hypothesis.
Must be one of "two.sided" (default), "greater" or "less". As in
\code{\link{wilcox.test}}, alternative = "greater" is the alternative that
class 1 is shifted to the right of class 0.}

\item{correct}{A logical indicating whether to apply continuity correction in
the normal approximation for the p-value.}
}
\value{
A list with class "htest" containing the following components:
  \describe{ \item{statistic}{the value of the statistics} \item{p.value}{the
  p-values for the tests}}

A data.frame with columns \describe{ \item{stat}{A vector of \code{m}
  Wilcoxon sum rank test statistics of association between \code{X} and
  \code{y}.} \item{stat0Mat}{An \code{m} x \code{B} matrix of \code{B}
  realizations of a \code{m}-dimensional vector of test statistics under the
  null hypothesis of no association between \code{X} and \code{y}.}}
}
\description{
Vectorized version of two-sample Wilcoxon rank sum tests
}
\details{
The p-values are computed using the normal approximation as
  described in the \code{\link{wilcox.test}} function. The exact p-values
  (which can be useful for small samples with no ties) are not implemented
  (yet).
}
\examples{

p <- 100
n <- 120
mat <- matrix(rnorm(p*n), ncol = n)
cls <- rep(c(0, 1), times = c(n/2, n/2))
fwt <- rowWilcoxonTests(mat, categ = cls, alternative = "two.sided")
str(fwt)

# compare with ordinary wilcox.test:
pwt <- t(sapply(1:p, FUN=function(ii) {
  wt <- wilcox.test(mat[ii, cls==1], mat[ii, cls==0], alternative = "two.sided")
  c(statistic = wt[["statistic"]], p.value = wt[["p.value"]])
}))
all(abs(fwt$p.value-pwt[, "p.value"]) < 1e-10)  ## same results
all(abs(fwt$statistic-pwt[, "statistic.W"]) < 1e-10)  ## same results

}
\seealso{
wilcox.test
}
\author{
Gilles Blanchard, Pierre Neuvial and Etienne Roquain
}
